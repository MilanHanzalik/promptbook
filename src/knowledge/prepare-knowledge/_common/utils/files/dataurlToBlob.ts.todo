import spaceTrim from 'spacetrim';
import { string_data_url } from '../../../../../types/typeAliases';
import { isValidDataurl } from './isValidDataurl';
import { shorten } from './shorten';

/**
 * Convert string dataurl to blob
 */
export async function dataurlToBlob(dataurl: string_data_url): Promise<Blob> {
    if (!isValidDataurl(dataurl)) {
        throw new Error(
            spaceTrim(`
                Can not convert invalid dataurl to blob

                Invalid dataurl:
                ${shorten(dataurl, 100)}
            `),
        );
    }

    // TODO: !!! Fix
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    const { headRaw, data } = dataurl.match(/^(?<headRaw>.*?),(?<data>.*)$/)?.groups!;
    const head = headRaw! /* <- !!! Not ! */
        .split(';');
    const type = head[0]! /* <- !!! Not ! */
        .split(':')[1]!;
    const isBase64Encoded = head.some((headPart) => headPart === 'base64');

    if (!isBase64Encoded) {
        return new Blob([decodeURIComponent(data! /* <- !!! Not ! */)], { type });
    }

    const byteString = atob(data! /* <- !!! Not ! */);

    const arrayBuffer = new ArrayBuffer(byteString.length);
    const intBuffer = new Uint8Array(arrayBuffer);

    for (let i = 0; i < byteString.length; i++) {
        intBuffer[i] = byteString.charCodeAt(i);
    }

    return new Blob([arrayBuffer], { type });
}

/**
 * TODO: [ðŸ§º] Is this working both in browser and node?
 * TODO: [ðŸ§º] In future uncomment
 * TODO: [ðŸ§º] Export via `@promptbook/pdf` and `@promptbook/docx`
 */
